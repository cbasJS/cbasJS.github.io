{"version":3,"sources":["webpack:///./src/components/Section/index.js","webpack:///./src/pages/upload.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Emoji/index.js","webpack:///./src/components/Footer/index.js","webpack:///./src/layouts/MainLayout.js","webpack:///./src/hooks/useSiteMetadata.js","webpack:///./src/components/Form/index.js"],"names":["Section","_ref","children","react_default","a","createElement","className","style","section","wrapper","UploadPage","MainLayout","SEO","title","gatsby_browser_entry","to","components_Section","Form","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","header","h1","Emoji","props","role","aria-label","label","aria-hidden","symbol","Footer","styles","footer","h5","Date","getFullYear","components_Emoji","_3387484817","mainLayout","components_Header","main","components_Footer","currentPath","global","cross_fetch__WEBPACK_IMPORTED_MODULE_1__","cross_fetch__WEBPACK_IMPORTED_MODULE_1___default","Headers","fetch","_useState","useState","nameOfProduct","setNameOfProduct","_useState2","priceOfProduct","setPriceOfProduct","_useState3","msg","setMsg","inputRefName","useRef","type","ref","value","onChange","event","target","placeholder","onClick","method","headers","Content-Type","body","JSON","stringify","productImage","productName","productPrice","then","response","console","log","status","current","focus","preventDefault","color"],"mappings":"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","file":"component---src-pages-upload-js-ddd63db0d07155103752.js","sourcesContent":["import React from \"react\"\nimport style from \"./Section.module.css\"\nimport PropTypes from \"prop-types\"\n\nconst Section = ({ children }) => {\n  return (\n    <section className={style.section}>\n      <div className={style.wrapper}>{children}</div>\n    </section>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Section\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport MainLayout from \"../layouts/MainLayout\"\nimport SEO from \"../components/SEO\"\nimport Section from \"../components/Section\"\nimport Form from \"../components/Form\"\n\nconst UploadPage = () => (\n  <MainLayout>\n    <SEO title=\"Upload\" />\n    <h1>Upload a product</h1>\n    <Link to=\"/\">Go to index</Link> <br></br>\n    <Link to=\"/list/\">List of products</Link>\n    <Section>\n      <Form />\n    </Section>\n  </MainLayout>\n)\n\nexport default UploadPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `es`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport style from \"./Header.module.css\"\n\nimport PropTypes from \"prop-types\"\n\nconst Header = ({ siteTitle }) => (\n  <header className={style.header}>\n    <div className={style.wrapper}>\n      <h1 className={style.h1}>\n        <Link className={style.a} to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nconst Emoji = props => (\n  <span\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n)\nexport default Emoji\n","import React from \"react\"\nimport Emoji from \"../Emoji\"\nimport styles from \"./Footer.module.css\"\n\nconst Footer = () => {\n  return (\n    <footer className={styles.footer}>\n      <div className={styles.wrapper}>\n        <h5 className={styles.h5}>\n          © {new Date().getFullYear()}, Made with a lot of{\" \"}\n          <Emoji label=\"sheep\" symbol=\"💓\" />\n        </h5>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\n\n// site metadata\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\n\n// components\nimport Header from \"../components/Header\"\nimport Footer from \"../components/Footer\"\n\n// styles\nimport \"../styles/normalize.css\" // reset styles\nimport \"../styles/extend-rules.css\"\nimport style from \"./MainLayout.module.css\"\n\nimport PropTypes from \"prop-types\"\n\nconst MainLayout = ({ children }) => {\n  const { title } = useSiteMetadata()\n\n  return (\n    <div className={style.mainLayout}>\n      <Header siteTitle={title}></Header>\n      <main className={style.main}>\n        <div className={style.wrapper}>{children}</div>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nMainLayout.defaultProps = {\n  currentPath: \"/\",\n}\n\nMainLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default MainLayout\n","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            title\n            shortDescription\n            description\n            author\n            mail\n            pathPrefix\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n","import React, { useState, useRef } from \"react\"\nimport fetch from \"cross-fetch\"\nglobal.Headers = fetch.Headers\n\nconst Form = () => {\n  const [nameOfProduct, setNameOfProduct] = useState(\"\")\n  const [priceOfProduct, setPriceOfProduct] = useState(0)\n  const [msg, setMsg] = useState(\"\")\n  const inputRefName = useRef(null)\n\n  const handleChangeName = event => {\n    setNameOfProduct(event.target.value)\n  }\n\n  const handleChangePrice = event => {\n    setPriceOfProduct(event.target.value)\n  }\n\n  const handleSubmit = event => {\n    const staticUrl = \"no-preview.png\"\n    fetch(\n      \"https://7mkody5dld.execute-api.us-east-1.amazonaws.com/staging/createProduct\",\n      {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n\n        //make sure to serialize your JSON body\n        body: JSON.stringify({\n          productImage: staticUrl,\n          productName: nameOfProduct,\n          productPrice: priceOfProduct,\n        }),\n      }\n    ).then(response => {\n      //do something awesome that makes the world a better place\n      console.log(response)\n      if (response.status === 200) {\n        setNameOfProduct(\"\")\n        setPriceOfProduct(0)\n        inputRefName.current.focus()\n        setMsg(\"Se ha agregado el producto\")\n      } else {\n        setMsg(\"Algo ha salido mal :(\")\n      }\n    })\n\n    event.preventDefault()\n  }\n\n  return (\n    <form>\n      <div>\n        <label>\n          Name of product:\n          <input\n            type=\"text\"\n            name=\"name\"\n            ref={inputRefName}\n            value={nameOfProduct}\n            onChange={handleChangeName}\n            placeholder=\"Type something\"\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          Price of product:\n          <input\n            type=\"number\"\n            name=\"price\"\n            value={priceOfProduct}\n            onChange={handleChangePrice}\n          />\n        </label>\n      </div>\n      <div>\n        <input type=\"submit\" value=\"Submit\" onClick={handleSubmit} />\n      </div>\n      <div>\n        <span\n          style={{\n            color: msg === \"Se ha agregado el producto\" ? \"green\" : \"red\",\n          }}\n        >\n          {msg}\n        </span>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n"],"sourceRoot":""}